// responses messages
export const extraMessages = {
  USER_NOT_FOUND: "User not found",
  SUCCESS_FETCH: "Data fetched successfully",
  ERROR_OCCURRED: "An unexpected error occurred",
};

export enum Status {
  SUCCESS = "Success",
  ERROR = "Error",
}

export enum SuccessMessages {
  PERMISSIONS_RETRIEVED = "Permissions retrieved successfully",
  ROLE_REMOVED_FROM_USER = "Role removed from user successfully",
  ROLE_ASSIGNED_TO_USER = "Role assigned to user successfully",
  POSTS_RETRIEVED = "Posts retrieved successfully",
  POST_CREATED = "Post created successfully",
  POST_DELETED = "Post deleted successfully",
  USER_ACTIVATED = "User Activated successfully",
  USER_DEACTIVATED = "User Deactivated successfully",
  USER_REGISTERED_SUCCESSFULLY = "User registered successfully",
  USER_SIGNIN_SUCCESSFUL = "User signin successful",
  PASSWORD_RESET_LINK_SENT = "Password reset link has been sent to the email",
  PASSWORD_RESET = "Password has been successfully reset",
  USER_CREATED = "User created successfully",
  MODULE_CREATED = "Module created successfully",
  MODULES_RETRIEVED = "Modules retrieved successfully",
  MODULE_UPDATED = "Module updated successfully",
  MODULE_DELETED = "Module deleted successfully",
  USER_UPDATED = "User updated successfully",
  USER_PROFILE_RETRIEVED = "User profile retrieved successfully",
  USER_DELETED = "User deleted successfully",
  USERS_RETRIEVED = "Users retrieved successfully",
  ROLE_CREATED = "Role created successfully",
  ROLE_UPDATED = "Role updated successfully",
  ROLE_DELETED = "Role deleted successfully",
  ROLES_RETRIEVED = "Roles retrieved successfully",
  COMMON_DATA_RETRIEVED = "Common data retrieved successfully",
  ROLE_RETRIEVED = "Role retrieved successfully",
  WELCOME_EMAIL_SENT = "Welcome email sent successfully",
  PERMISSION_CREATED = "Permission created successfully",
  PERMISSION_RETRIEVED = "Permissions retrieved successfully",
  ROLE_ACTIVATED = "Role activated successfully",
  ROLE_DEACTIVATED = "Role deactivated successfully",
  USER_ALREADY_DELETED = "User already deleted",
  USER_RESTORED = "User restored successfully",
}

export enum ErrorMessages {
  DATABASE_CONNECTION_FAILED = "Database connection failed",
  TOO_MANY_REQUESTS = "Too many requests from this IP, please try again later.",
  ROLE_ASSIGNMENT_FAILED = "Role assignment failed - required roles not found",
  POST_NOT_FOUND = "Post not found",
  INSUFFICIENT_PERMISSIONS = "Insufficient permissions",
  INVALID_CREDENTIALS_OR_INACTIVE_ID = "Either account is inactive or invalid credentials",
  INVALID_USERID = "Invalid user ID format",
  UNAUTHORIZED = "You cannot perform this action",
  ADMIN_AUTH_FAILED = "Admin authentication failed, only admins can access this information",
  AUTHENTICATION_FAILED = "Authentication failed",
  TOKEN_NOT_FOUND = "Authentication failed, Token is required",
  SEED_ERROR = "Error while seeding the databse",
  INTERNAL_SERVER_ERROR = "Internal server error",
  VALIDATION_FAILED = "Validation failed",
  USER_ALREADY_EXISTS = "User already exists",
  INVALID_CREDENTIALS = "Invalid email or password",
  USER_CREATION_FAILED = "User creation failed",
  MODULE_CREATION_FAILED = "Module creation failed",
  MODULE_NOT_FOUND = "Module not found",
  MODULE_RETRIEVAL_FAILED = "Module retrieval failed",
  MODULE_NAME_ALREADY_EXISTS = "Module name already exists",
  MODULE_UPDATE_FAILED = "Module update failed",
  MODULE_DELETION_FAILED = "Module deletion failed",
  SORT_ORDER_ALREADY_EXISTS = "Sort order already exists",
  MODULE_ID_INVALID = "Module id is invalid",
  USER_UPDATE_FAILED = "User update failed",
  USER_NOT_FOUND = "User not found",
  USER_ID_INVALID = "User id is invalid",
  USER_ROLE_INVALID = "User role is invalid",
  USERS_RETRIEVAL_FAILED = "Users retrieval failed",
  ROLE_ALREADY_EXISTS = "Role already exists",
  ROLE_CREATION_FAILED = "Role creation failed",
  ROLE_UPDATE_FAILED = "Role update failed",
  ROLE_DELETION_FAILED = "Role deletion failed",
  ROLES_RETRIEVAL_FAILED = "Roles retrieval failed",
  ROLE_NOT_FOUND = "Role not found",
  ROLE_ID_INVALID = "Role id is invalid",
  ROLE_NAME_INVALID = "Role name is invalid",
  ROLE_DESCRIPTION_INVALID = "Role description is invalid",
  ROLE_NAME_REQUIRED = "Role name is required",
  ROLE_DESCRIPTION_REQUIRED = "Role description is required",
  INVALID_PERMISSION_IDS = "Invalid permission ids",
  INVALID_MODULE_IDS = "Invalid module ids",
  USER_ALREADY_VERIFIED = "User already verified",
  MODULE_ASSOCIATED_WITH_PERMISSION = "Module has permissions associated with roles and cannot be deleted",
  MODULE_HAS_PERMISSIONS = "Module has permissions that must be removed first",
  MODULE_ASSOCIATED_WITH_ROLE = "Module is associated with role",
  PERMISSION_ASSOCIATED_WITH_ROLE = "Permission is associated with role",
  PERMISSION_ASSOCIATED_WITH_MODULE = "Permission is associated with module",
  PERMISSION_ASSOCIATED_WITH_USER = "Permission is associated with user",
  PERMISSION_ASSOCIATED_WITH_USER_ROLE = "Permission is associated with user role",
  PERMISSION_ASSOCIATED_WITH_USER_ROLE_MODULE = "Permission is associated with user role module",
  PERMISSION_ASSOCIATED_WITH_USER_ROLE_MODULE_ROLE = "Permission is associated with user role module role",
  PERMISSION_NOT_FOUND = "Permission not found",
  PERMISSION_ALREADY_EXISTS = "Permission already exists",
  ID_REQUIRED = "Id is required",
  USER_RESTORE_FAILED = "User restore failed",
}

export enum ValidationMessages {
  EMAIL_REQUIRED = "Email is required",
  ID_REQUIRED = "Id is required",
  ID_POSITIVE_INT = "Id must be a positive integer",
  SLUG_REQUIRED = "Slug is required",
  SLUG_VALID = "Slug must be less than 45 characters",
  STATUS_REQUIRED = "Status is required",
  STATUS_BOOLEAN = "Status must be a boolean",
  NAME_REQUIRED = "Name is required",
  DESCRIPTION_REQUIRED = "Description is required",
  IS_ACTIVE_REQUIRED = "Is active is required",
  IS_VISIBLE_REQUIRED = "Is visible is required",
  SORT_ORDER_REQUIRED = "Sort order is required",
  SORT_ORDER_POSITIVE_INT = "Sort order must be a positive integer",
  SORT_ORDER_UNIQUE = "Sort order must be unique",
  SEARCH_TERM_REQUIRED = "Search term is required",
  SEARCH_TERM_MIN_LENGTH = "Search term must be at least 3 characters",
  SEARCH_TERM_MAX_LENGTH = "Search term must be less than 255 characters",
  FILTER_TYPE_REQUIRED = "Filter type is required",
  FILTER_VALUE_REQUIRED = "Filter value is required",
  FILTER_VALUE_MIN_LENGTH = "Filter value must be at least 3 characters",
  FILTER_VALUE_MAX_LENGTH = "Filter value must be less than 255 characters",
  FILTER_TYPE_VALID = "Filter type must be a valid type",
  IDS_EACH_POSITIVE_INT = "Each id must be a positive integer",
  IDS_NON_EMPTY_ARRAY = "Ids must be an array of positive integers",
  TYPE_REQUIRED = "Type is required",
  EMAIL_INVALID = "Email is invalid",
  ROLE_REQUIRED = "Role is required",
  ROLE_INVALID = "Role is invalid",
  PAGE_REQUIRED = "Page is required",
  LIMIT_REQUIRED = "Limit is required",
  SKIP_REQUIRED = "Skip is required",
  SORTING_KEY_REQUIRED = "Sorting key is required",
  SORTING_DIRECTION_REQUIRED = "Sorting direction is required",
  ID_INTEGER = "Id must be an integer",
  ACTION_REQUIRED = "Action is required",
  ACTION_MAX_LENGTH = "Action must be less than 50 characters",
  DESCRIPTION_MAX_LENGTH = "Description must be less than 255 characters",
  RESOURCE_MAX_LENGTH = "Resource must be less than 100 characters",
  SORT_ORDER_INTEGER = "Sort order must be an integer",
  SORT_ORDER_MIN = "Sort order must be greater than or equal to 0",
  NAME_MAX_LENGTH = "Name must be less than 255 characters",
  LIMIT_POSITIVE_INT = "Limit must be a positive integer",
  LIMIT_LESS_THAN_ONE_HUNDRED = "Limit must be less than 100",
  PAGE_NUMBER_POSITIVE_INT = "Page number must be a positive integer",
  PAGE_NUMBER_GREATER_THAN_ZERO = "Page number must be greater than 0",
  MODULE_ID_POSITIVE_INT = "Module id must be a positive integer",
  TITLE_REQUIRED = "Title is required",
}

export enum EmailMessages {
  WELCOME_EMAIL = "welcome-email",
}

export const DELETE_ACTIONS = {
  PERMANENT: "delete",
  RESTORE: "restore",
  TEMPORARY: "temp-delete",
};

export const URL_TYPE = {
  BLOG: "Blog",
  PAGE: "Page",
  CUSTOM: "Custom",
};
